version: '3.4'

# This is an example docker-compose file to quickly test an IPFS Cluster
# with multiple peers on a contained environment.

# It runs 3 cluster peers (regulator-cluster, builder-cluster...) attached to go-ipfs daemons
# (regulator-ipfs, builder-ipfs...) using the CRDT consensus component. Cluster peers
# autodiscover themselves using mDNS on the docker internal network.
#
# To interact with the cluster use "ipfs-cluster-ctl" (the regulator-cluster API port is
# exposed to the locahost. You can also "docker exec -ti regulator-cluster sh" and run
# it from the container. "ipfs-cluster-ctl peers ls" should show all 3 peers a few
# seconds after start.
#
# For persistance, a "compose" folder is created and used to store configurations
# and states. This can be used to edit configurations in subsequent runs. It looks
# as follows:
#
# compose/
# |-- regulator-cluster
# |-- builder-cluster
# |-- ...
# |-- regulator-ipfs
# |-- builder-ipfs
# |-- ...
#
# During the first start, default configurations are created for all peers.

services:
  ##################################################################################
  ## Cluster PEER 0 ################################################################
  ##################################################################################

  regulator-ipfs:
    container_name: regulator-ipfs
    image: ipfs/go-ipfs:release
    ports:
      - '4001:4001' # ipfs swarm - expose if needed/wanted
      - '5001:5001' # ipfs api - expose if needed/wanted
      - '8080:8080' # ipfs gateway - expose if needed/wanted
    volumes:
      - ./compose/regulator-ipfs:/data/ipfs

  regulator-cluster:
    container_name: regulator-cluster
    image: ipfs/ipfs-cluster:latest
    depends_on:
      - regulator-ipfs
    environment:
      CLUSTER_PEERNAME: regulator-cluster
      CLUSTER_SECRET: ${CLUSTER_SECRET} # From shell variable if set
      CLUSTER_IPFSHTTP_NODEMULTIADDRESS: /dns4/regulator-ipfs/tcp/5001
      CLUSTER_CRDT_TRUSTEDPEERS: '*' # Trust all peers in Cluster
      CLUSTER_RESTAPI_HTTPLISTENMULTIADDRESS: /ip4/0.0.0.0/tcp/9094 # Expose API
      CLUSTER_MONITORPINGINTERVAL: 2s # Speed up peer discovery
    ports:
      # Open API port (allows ipfs-cluster-ctl usage on host)
      - '127.0.0.1:9094:9094'
      # The cluster swarm port would need  to be exposed if this container
      # was to connect to cluster peers on other hosts.
      # But this is just a testing cluster.
      # - "9096:9096" # Cluster IPFS Proxy endpoint
    volumes:
      - ./compose/regulator-cluster:/data/ipfs-cluster

  ##################################################################################
  ## Cluster PEER 1 ################################################################
  ##################################################################################

  # See Cluster PEER 0 for comments (all removed here and below)
  builder-ipfs:
    container_name: builder-ipfs
    image: ipfs/go-ipfs:release
    volumes:
      - ./compose/builder-ipfs:/data/ipfs

  builder-cluster:
    container_name: builder-cluster
    image: ipfs/ipfs-cluster:latest
    depends_on:
      - builder-ipfs
    environment:
      CLUSTER_PEERNAME: builder-cluster
      CLUSTER_SECRET: ${CLUSTER_SECRET}
      CLUSTER_IPFSHTTP_NODEMULTIADDRESS: /dns4/builder-ipfs/tcp/5001
      CLUSTER_CRDT_TRUSTEDPEERS: '*'
      CLUSTER_MONITORPINGINTERVAL: 2s # Speed up peer discovery
    volumes:
      - ./compose/builder-cluster:/data/ipfs-cluster
